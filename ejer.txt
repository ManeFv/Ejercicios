# 1. Contar Ocurrencias de Elementos
def contar_ocurrencias(palabras):
    ocurrencias = {}
    for palabra in palabras:
        if palabra in ocurrencias:
            ocurrencias[palabra] += 1
        else:
            ocurrencias[palabra] = 1
    return ocurrencias

palabras = ["python", "java", "python", "c++"]
# Salida: {"python": 2, "java": 1, "c++": 1}
print(contar_ocurrencias(palabras))


# 2. Combinar Diccionarios
def combinar_diccionarios(dic1, dic2):
    resultado = dic1.copy()
    for clave, valor in dic2.items():
        if clave in resultado:
            resultado[clave] += valor
        else:
            resultado[clave] = valor
    return resultado

dic1 = {'a': 1, 'b': 2}
dic2 = {'b': 3, 'c': 4}
# Salida: {'a': 1, 'b': 5, 'c': 4}
print(combinar_diccionarios(dic1, dic2))


# 3. Listas de Frecuencia
def lista_frecuencia(numeros):
    frecuencia = {}
    for numero in numeros:
        if numero in frecuencia:
            frecuencia[numero] += 1
        else:
            frecuencia[numero] = 1
    return frecuencia

numeros = [1, 1, 2, 3, 3, 3]
# Salida: {1: 2, 2: 1, 3: 3}
print(lista_frecuencia(numeros))


# 4. Filtrar Palabras Largas
def filtrar_palabras_largas(palabras, longitud):
    return [palabra for palabra in palabras if len(palabra) > longitud]

palabras = ["hola", "mundo", "python", "programación"]
longitud = 5
# Salida: ["programación"]
print(filtrar_palabras_largas(palabras, longitud))


# 5. Inversión de Tuplas en Lista
def invertir_tuplas(tuplas):
    return [(b, a) for (a, b) in tuplas]

tuplas = [(1, 2), (3, 4), (5, 6)]
# Salida: [(2, 1), (4, 3), (6, 5)]
print(invertir_tuplas(tuplas))


# 6. Encontrar el Valor Más Frecuente
def valor_mas_frecuente(numeros):
    frecuencia = lista_frecuencia(numeros)
    return max(frecuencia, key=frecuencia.get)

numeros = [1, 2, 3, 1, 2, 1]
# Salida: 1
print(valor_mas_frecuente(numeros))


# 7. Comprobar Subconjunto
def es_subconjunto(conjunto1, conjunto2):
    return conjunto1.issubset(conjunto2)

conjunto1 = {1, 2, 3}
conjunto2 = {1, 2, 3, 4, 5}
# Salida: True
print(es_subconjunto(conjunto1, conjunto2))


# 8. Agrupación por Clave
def agrupar_por_edad(personas):
    resultado = {}
    for persona in personas:
        edad = persona['edad']
        nombre = persona['nombre']
        if edad not in resultado:
            resultado[edad] = []
        resultado[edad].append(nombre)
    return resultado

personas = [{"nombre": "Ana", "edad": 25}, {"nombre": "Luis", "edad": 25}, {"nombre": "Carlos", "edad": 30}]
# Salida: {25: ['Ana', 'Luis'], 30: ['Carlos']}
print(agrupar_por_edad(personas))


# 9. Merge Sort utilizando Listas
def merge_sort(numeros):
    if len(numeros) <= 1:
        return numeros
    medio = len(numeros) // 2
    izquierda = merge_sort(numeros[:medio])
    derecha = merge_sort(numeros[medio:])
    return merge(izquierda, derecha)

def merge(izquierda, derecha):
    resultado = []
    i = j = 0
    while i < len(izquierda) and j < len(derecha):
        if izquierda[i] < derecha[j]:
            resultado.append(izquierda[i])
            i += 1
        else:
            resultado.append(derecha[j])
            j += 1
    resultado.extend(izquierda[i:])
    resultado.extend(derecha[j:])
    return resultado

numeros = [5, 3, 8, 6, 2]
# Salida: [2, 3, 5, 6, 8]
print(merge_sort(numeros))


# 10. Eliminar Elementos por Condición
def eliminar_menores(numeros, limite):
    return [numero for numero in numeros if numero >= limite]

numeros = [1, 2, 3, 4, 5]
limite = 3
# Salida: [3, 4, 5]
print(eliminar_menores(numeros, limite))


# 11. Flatten List of Lists
def aplanar_lista(lista_de_listas):
    return [elemento for sublista in lista_de_listas for elemento in sublista]

lista_de_listas = [[1, 2], [3, 4], [5]]
# Salida: [1, 2, 3, 4, 5]
print(aplanar_lista(lista_de_listas))


# 12. Cálculo de Mediana
def calcular_mediana(numeros):
    numeros_ordenados = sorted(numeros)
    longitud = len(numeros_ordenados)
    mitad = longitud // 2
    if longitud % 2 == 0:
        return (numeros_ordenados[mitad - 1] + numeros_ordenados[mitad]) / 2
    else:
        return numeros_ordenados[mitad]

numeros = [1, 3, 2, 4, 5]
# Salida: 3
print(calcular_mediana(numeros))


# 13. Duplicar Elementos en una Lista
def duplicar_elementos(numeros):
    return [numero for numero in numeros for _ in range(2)]

numeros = [1, 2, 3]
# Salida: [1, 1, 2, 2, 3, 3]
print(duplicar_elementos(numeros))


# 14. Contar Palabras en Frases
def contar_palabras(frases):
    return {i: len(frase.split()) for i, frase in enumerate(frases)}

frases = ["Hola mundo", "Python es genial", "Me gusta programar"]
# Salida: {0: 2, 1: 3, 2: 3}
print(contar_palabras(frases))


# 15. Encontrar Clave Máxima en Diccionario
def clave_maxima(diccionario):
    return max(diccionario, key=diccionario.get)

diccionario = {'a': 10, 'b': 20, 'c': 5}
# Salida: 'b'
print(clave_maxima(diccionario))


# 16. Palíndromos en una Lista
def encontrar_palindromos(palabras):
    return [palabra for palabra in palabras if palabra == palabra[::-1]]

palabras = ["ana", "oso", "hola", "level"]
# Salida: ["ana", "oso", "level"]
print(encontrar_palindromos(palabras))
